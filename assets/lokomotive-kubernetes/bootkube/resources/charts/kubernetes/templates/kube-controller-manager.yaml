apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    tier: control-plane
    k8s-app: kube-controller-manager
spec:
  replicas: {{ .Values.controllerManager.controlPlaneReplicas }}
  selector:
    matchLabels:
      tier: control-plane
      k8s-app: kube-controller-manager
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-controller-manager
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: tier
                  operator: In
                  values:
                  - control-plane
                - key: k8s-app
                  operator: In
                  values:
                  - kube-controller-manager
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        node.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kube-controller-manager
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: kube-controller-manager
        image: {{ .Values.controllerManager.image }}
        command:
        - kube-controller-manager
        - --use-service-account-credentials
        - --allocate-node-cidrs=true
        - --cloud-provider={{ .Values.controllerManager.cloudProvider }}
        - --cluster-cidr={{ .Values.controllerManager.podCIDR }}
        - --service-cluster-ip-range={{ .Values.controllerManager.serviceCIDR }}
        - --cluster-signing-cert-file=/etc/kubernetes/secrets/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/secrets/ca.key
        - --configure-cloud-routes=false
        - --leader-elect=true
        - --flex-volume-plugin-dir=/var/lib/kubelet/volumeplugins
        - --pod-eviction-timeout=1m
        - --root-ca-file=/etc/kubernetes/secrets/ca.crt
        - --service-account-private-key-file=/etc/kubernetes/secrets/service-account.key
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 10257
          initialDelaySeconds: 15
          timeoutSeconds: 15
        volumeMounts:
        - name: secrets
          mountPath: /etc/kubernetes/secrets
          readOnly: true
        - name: volumeplugins
          mountPath: /var/lib/kubelet/volumeplugins
          readOnly: true
        - name: ssl-host
          mountPath: /etc/ssl/certs
          readOnly: true
        resources:
          requests:
            memory: "50Mi"
      volumes:
      - name: secrets
        secret:
          secretName: kube-controller-manager
      - name: ssl-host
        hostPath:
          path: {{ .Values.controllerManager.trustedCertsDir }}
      - name: volumeplugins
        hostPath:
          path: /var/lib/kubelet/volumeplugins
      dnsPolicy: Default # Don't use cluster DNS.
