---
###
### Controller
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: {{.Values.namespace}}
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: {{.Values.namespace}}
  annotations:
    {{ include "partials.annotations.created-by" . }}
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085
{{- if .Values.enablePodAntiAffinity }}
---
kind: PodDisruptionBudget
apiVersion: policy/v1beta1
metadata:
  name: linkerd-controller-api
  namespace: {{.Values.namespace}}
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: {{.Values.namespace}}
  annotations:
    {{ include "partials.annotations.created-by" . }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
{{- end }}
---
{{- $tree := deepCopy . }}
{{ $_ := set $tree.Values.proxy "workloadKind" "deployment" -}}
{{ $_ := set $tree.Values.proxy "component" "linkerd-controller" -}}
{{ include "linkerd.proxy.validation" .Values.proxy -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{ include "partials.annotations.created-by" . }}
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{default .Values.linkerdVersion .Values.controllerImageVersion}}
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: {{.Values.namespace}}
  name: linkerd-controller
  namespace: {{.Values.namespace}}
spec:
  replicas: {{.Values.controllerReplicas}}
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: {{.Values.namespace}}
      {{- include "partials.proxy.labels" $tree.Values.proxy | nindent 6}}
  {{- if .Values.enablePodAntiAffinity }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      annotations:
        {{ include "partials.annotations.created-by" . }}
        {{- include "partials.proxy.annotations" . | nindent 8}}
        {{- with .Values.podAnnotations }}{{ toYaml . | trim | nindent 8 }}{{- end }}
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: {{.Values.namespace}}
        linkerd.io/workload-ns: {{.Values.namespace}}
        {{- include "partials.proxy.labels" $tree.Values.proxy | nindent 8}}
        {{- with .Values.podLabels }}{{ toYaml . | trim | nindent 8 }}{{- end }}
    spec:
      {{- if .Values.tolerations -}}
      {{- include "linkerd.tolerations" . | nindent 6 }}
      {{- end -}}
      {{- include "linkerd.node-selector" . | nindent 6 }}
      {{- if .Values.enablePodAntiAffinity -}}
      {{- $local := dict "component" "controller" -}}
      {{- include "linkerd.pod-affinity" $local | nindent 6 -}}
      {{- end }}
      containers:
      - args:
        - public-api
        - -destination-addr=linkerd-dst.{{.Values.namespace}}.svc.{{.Values.clusterDomain}}:8086
        - -controller-namespace={{.Values.namespace}}
        - -log-level={{.Values.controllerLogLevel}}
        - -log-format={{.Values.controllerLogFormat}}
        - -cluster-domain={{.Values.clusterDomain}}
        {{- include "partials.linkerd.trace" . | nindent 8 -}}
        image: {{.Values.controllerImage}}:{{default .Values.linkerdVersion .Values.controllerImageVersion}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        {{- if .Values.publicAPIResources -}}
        {{- include "partials.resources" .Values.publicAPIResources | nindent 8 }}
        {{- end }}
        securityContext:
          runAsUser: {{.Values.controllerUID}}
      {{- if not (empty .Values.publicAPIProxyResources) }}
      {{- $r := merge .Values.publicAPIProxyResources .Values.proxy.resources }}
      {{- $_ := set $tree.Values.proxy "resources" $r }}
      {{- end }}
      - {{- include "partials.proxy" $tree | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ if not .Values.cniEnabled -}}
      initContainers:
      {{- if not (contains "443" ( .Values.proxyInit.ignoreOutboundPorts | toString ))}}
      {{- $_ := set $tree.Values.proxyInit "ignoreOutboundPorts" ( ternary "443" (printf "%s,443" (.Values.proxyInit.ignoreOutboundPorts | toString )) (empty .Values.proxyInit.ignoreOutboundPorts)) -}}
      {{- end}}
      - {{- include "partials.proxy-init" $tree | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      serviceAccountName: linkerd-controller
      volumes:
      {{ if not .Values.cniEnabled -}}
      - {{- include "partials.proxyInit.volumes.xtables" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      - {{- include "partials.proxy.volumes.identity" . | indent 8 | trimPrefix (repeat 7 " ") }}
